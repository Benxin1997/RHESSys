dates <- seq.dates(from="6/5/2011",length=length(Q))
dates
obs <- matrix(,length(Q),2)
colnames(obs) <- coll
obs$date <- dates
obs$mm <- Q
obs
remove(obs)
obs <- data.frame(date=dates,mm=Q)
obs
list()
ls()
obs
results
ls()
obs
ls
ls()
q()
ls()
head(rsult3d)
head(result3d)
head(result3d.aug)
library(chron)
head(result3d)
head(stats3d)
head(results)
q()
ls
ls()
names(wgd250)
plot(wgd250$soiln)
plot(wgd250$plantn)
q()
ls()
names(result3d.mth)
dim(result3d.mth)
help(matric)
help(matrix)
help(array)
nwy
m.days <- c(1:(12*nwy))#
m.n <- 1#
#
for (i in 2:length(result3d$month)) {#
	if(result3d$month[i] !=	result3d$month[i-1]) {#
		m.n <- m.n + 1#
		m.days[m.n] <- i#
	}#
}
m.days
result3d.month
result3d$month
m.days
help(aggregate)
head(result3d)
help(qpply)
help(apply)
help(rowbind)
help(rbind)
MONTHLY PEAKS#
#
result3d.mpk = as.data.frame(matrix(nrow=12*nwy, ncol=ncal.nogw.stat, 0.0))#
#
m.days <- c(1:(12*nwy)+1)#
m.n <- 1#
#
for (i in 2:length(result3d$month)) {#
	if(result3d$month[i] !=	result3d$month[i-1]) {#
		m.n <- m.n + 1#
		m.days[m.n] <- i#
	}#
	m.days[m.n+1] <- length(result3d$month+1)#
}#
####tmp = apply(result3d.aug[,(1:ncal.nogw.stat)],2,mper.err,o=result3d.aug$obs)#
####stats3d$aug.perr = tmp#
for (i in 1:(12*nwy)) {#
tmp1 = apply(result3d[(m.days[i]):(m.days[i+1]),2:(ncal.nogw.stat+1)],2, max)#
tmp = rbind(tmp1)#
}#
#
results3d.mpk <- tmp
dim(results3d.mpk)
resulted3d.mpk
results3d.mpk
tmp-tmp1
mac(tmp-tmp1)
max(tmp-tmp1)
MONTHLY PEAKS#
#
result3d.mpk = as.data.frame(matrix(nrow=12*nwy, ncol=ncal.nogw.stat, 0.0))#
#
m.days <- c(1:(12*nwy)+1)#
m.n <- 1#
#
for (i in 2:length(result3d$month)) {#
	if(result3d$month[i] !=	result3d$month[i-1]) {#
		m.n <- m.n + 1#
		m.days[m.n] <- i#
	}#
	m.days[m.n+1] <- length(result3d$month+1)#
}#
####tmp = apply(result3d.aug[,(1:ncal.nogw.stat)],2,mper.err,o=result3d.aug$obs)#
####stats3d$aug.perr = tmp#
for (i in 1:(12*nwy)) {#
tmp1 = apply(result3d[(m.days[i]):(m.days[i+1]),2:(ncal.nogw.stat+2)],2, max)#
results3d.mpk[,i] = tmp1#
}
MONTHLY PEAKS#
#
result3d.mpk = as.data.frame(matrix(nrow=12*nwy, ncol=ncal.nogw.stat, 0.0))#
#
m.days <- c(1:(12*nwy)+1)#
m.n <- 1#
#
for (i in 2:length(result3d$month)) {#
	if(result3d$month[i] !=	result3d$month[i-1]) {#
		m.n <- m.n + 1#
		m.days[m.n] <- i#
	}#
	m.days[m.n+1] <- length(result3d$month+1)#
}#
####tmp = apply(result3d.aug[,(1:ncal.nogw.stat)],2,mper.err,o=result3d.aug$obs)#
####stats3d$aug.perr = tmp#
for (i in 1:(12*nwy)) {#
tmp1 = apply(result3d[(m.days[i]):(m.days[i+1]),2:(ncal.nogw.stat+2)],2, max)#
results3d.mpk[i,] = tmp1#
}
MONTHLY PEAKS#
#
result3d.mpk = as.data.frame(matrix(nrow=12*nwy, ncol=ncal.nogw.stat+1, 0.0))#
#
m.days <- c(1:(12*nwy)+1)#
m.n <- 1#
#
for (i in 2:length(result3d$month)) {#
	if(result3d$month[i] !=	result3d$month[i-1]) {#
		m.n <- m.n + 1#
		m.days[m.n] <- i#
	}#
	m.days[m.n+1] <- length(result3d$month+1)#
}#
####tmp = apply(result3d.aug[,(1:ncal.nogw.stat)],2,mper.err,o=result3d.aug$obs)#
####stats3d$aug.perr = tmp#
for (i in 1:(12*nwy)) {#
tmp1 = apply(result3d[(m.days[i]):(m.days[i+1]),2:(ncal.nogw.stat+2)],2, max)#
results3d.mpk[i,] = tmp1#
}
dim(tmp1)
length(tmp1)
dim(results3d.mpk)
nwy
MONTHLY PEAKS#
#
result3d.mpk = as.data.frame(matrix(nrow=12*nwy, ncol=ncal.nogw.stat+1, 0.0))#
#
m.days <- c(1:(12*nwy)+1)#
m.n <- 1#
#
for (i in 2:length(result3d$month)) {#
	if(result3d$month[i] !=	result3d$month[i-1]) {#
		m.n <- m.n + 1#
		m.days[m.n] <- i#
	}#
	m.days[m.n+1] <- length(result3d$month+1)#
}#
####tmp = apply(result3d.aug[,(1:ncal.nogw.stat)],2,mper.err,o=result3d.aug$obs)#
####stats3d$aug.perr = tmp#
for (i in 1:(12*nwy)) {#
tmp1 = apply(result3d[(m.days[i]):(m.days[i+1]),2:(ncal.nogw.stat+2)],2, max)#
result3d.mpk[i,] = tmp1#
}
dim(result3d.npk)
dim(result3d.mpk)
names(result3d.mpk)
help(col.names)
help(colnames)
colnames(result3d.pmth[ncal.nogw.stat+1]) <- c("obs")
MONTHLY PEAKS#
#
result3d.pmth = as.data.frame(matrix(nrow=12*nwy, ncol=ncal.nogw.stat+1, 0.0))#
#
m.days <- c(1:(12*nwy)+1)#
m.n <- 1#
#
for (i in 2:length(result3d$month)) {#
	if(result3d$month[i] !=	result3d$month[i-1]) {#
		m.n <- m.n + 1#
		m.days[m.n] <- i#
	}#
	m.days[m.n+1] <- length(result3d$month+1)#
}#
####tmp = apply(result3d.aug[,(1:ncal.nogw.stat)],2,mper.err,o=result3d.aug$obs)#
####stats3d$aug.perr = tmp#
for (i in 1:(12*nwy)) {#
tmp1 = apply(result3d[(m.days[i]):(m.days[i+1]),2:(ncal.nogw.stat+2)],2, max)#
result3d.pmth[i,] = tmp1#
}#
colnames(result3d.pmth[ncal.nogw.stat+1]) <- c("obs")
names(result3d.pmth)
colnames(result3d.pmth[,ncal.nogw.stat+1]) <- c("obs")
colnames(result3d.pmth) <- c(1:ncal.nogw.stat,"obs")
names(result3d.pmth)
tmp = apply(result3d.pmth[,(1:ncal.nogw.stat)],2,mper.err,o=result3d.pmth$obs)#
stats3d$pmth.perr = tmp#
#
tmp = apply(result3d.pmth[,(1:ncal.nogw.stat)],2,nse,o=result3d.pmth$obs)#
stats3d$pmth.nse = tmp#
#
tmp = apply(result3d.pmth[,(1:ncal.nogw.stat)],2,cor,y=result3d.pmth$obs)#
stats3d$pmth.cor = tmp
head(stats3d)
mac(pmth.nse)
max(pmth.nse)
max(stats3d$pmth.nse)
summary(stats3d$pmth.nse)
cf <- c(9,6,99,5)
fc <- sort(cf)
fc
cf2 <- c(4,5,6,7)
df <- rbind(cf,cf2)
df
df <- cbind(cf,cf2)
df
df2 <- sort(df$cf)
df <- as.dataframe(df)
df <- as.data.frame(df)
df
df2 <- sort(df$cf)
df2
citation()
q()
ls()
lm(mc.no3$EMC.mgL~mc.no3$Peak.Q)
summary(lm(mc.no3$EMC.mgL~mc.no3$Peak.Q))
plot(mc.no3$Peak.Q, mc.no3$EMC.mgL)
length(hall)
length(call)
dim(hall)
length(call)
cor(wl.no3[,c(49,cornums)])
cor(wp.no3[,c(49,cornums)])
plot(wp.no3$T14d.min,wp.no3$b)
plot(wp.no3$PeakI.mmhr,wp.no3$b)
plot(wp.no3$Peak.Q,wp.no3$b)
plot(wp.no3$T14d.min,wp.no3$b)
cor(wl.no3[,c(3,cornums)])
q()
names(mc.hall)
mean(mc.hall$T14d)
sd(mc.hall$T14d)
mean(eb.hall$T14d)
sd(eb.hall$T14d)
mean(wp.hall$T14d)
sd(wp.hall$T14d)
mean(wl.hall$T14d)
sd(wl.hall$T14d)
mean(mc.hall$T14d.min)
sd(mc.hall$T14d.min)
mean(eb.hall$T14d.min)
sd(eb.hall$T14d.min)
mean(wp.hall$T14d.min)
sd(wp.hall$T14d.min)
mean(wl.hall$T14d.min)
sd(wl.hall$T14d.min)
plot(call$TI,call$treatedfrac)
head(call)
plot(call$iafrac,call$treatedfrac)
plot(call$ei,call$treatedfrac)
call$treatedfrac
boxplot(call$TotP.mm~call$site)
boxplot(call$T14d~call$site)
length(subset(call$b,call$b>1.15))
length(subset(no3.all$b,no3.all$b>1.15))
length(no3.all)
48/55
length(subset(don.all$b,don.all$b>1.15))
no3.late <- subset(no3.all, no3.all$b>1.15)
don.late <- subset(don.all, don.all$b>1.15)
no3.notlate <- subset(no3.all, no3.all$b<1.15)
don.notlate <- subset(don.all, don.all$b<1.15)
mean(no3.late$Peak.Q)
boxplot(no3.late$Peak.Q~)
par(mfrow=c(2,2))
boxplot(no3.late$Peak.Q~no3.late$site)
boxplot(no3.notlate$Peak.Q~no3.notlate$site)
no3.notelate
no3.notlate
no3.late
length(subset(no3.all$FF.b,no3.all$FF.b>1.15))
length(subset(don.all$FF.b,don.all$FF.b>1.15))
plot(no3.all$TotP.mm, no3.all$FF.b)
dev.off()
par(mfrow=c(2,2))
plot(mc.no3$TotP.mm, mc.no3$FF.b)
plot(eb.no3$TotP.mm, eb.no3$FF.b)
plot(wp.no3$TotP.mm, wp.no3$FF.b)
plot(wl.no3$TotP.mm, wl.no3$FF.b)
summary(lm(no3.mc$b~po4.mc$b))
summary(lm(mc.no3$b~mc.po4$b))
summary(lm(eb.no3$b~eb.po4$b))
summary(lm(wp.no3$b~wp.po4$b))
doc.all$EMC.mgL
tapply(doc.all$EMC.mgL, doc.all$site, mean)
28/8
52.5/8.1
tapply(po4.all$EMC.mgL, po4.all$site, mean)
11/3
tapply(po4.all$Peak.C, po4.all$site, mean)
0.182/0.544
0.182/0.0544
plot(wp.po4$EMC.mgL,wp.po4$PeakI.mmhr)
plot(wp.po4$PeakI.mmhr,wp.po4$EMC.mgL)
plot(wl.po4$PeakI.mmhr,wl.po4$EMC.mgL)
plot(wp.po4$PeakI.mmhr,wp.po4$FF.b)
plot(wl.po4$PeakI.mmhr,wl.po4$FF.b)
q()
pout <- read.table(file="pondtest/programs/rhessys.develop.scm/rhessys/pondtest/out/try.pondtest_patch.hourly", header=T)
head(pout)
rm(list=ls())
setwd("/Users/colinbell/pondtest/programs/rhessys.develop.scm/rhessys/pondtest/flowtables/unedited/")
1 - Read in Data files#
#
# Read in Explicit rounting table created by hand / with GRASS#
rtab <- read.csv(file="roadpnos.csv", header=T)#
#
# Read in surface flow table#
flow <- read.table(file="pondtest_surface.flow", header=F, sep=",")#
flow.t <- as.data.frame(matrix(data=-99999,nrow=dim(flow)[1],ncol=11))#
#
# Convert flow table into a usable data frame
Convert flow table into a usable data frame#
for(i in seq(1:dim(flow)[1])){#
	row1 <- as.data.frame(strsplit(as.character(flow[i,1])," "))#
	row1 <- subset(row1, row1!="")#
	if(dim(row1)[1]<5) {#
		flow.t[i,1] <- -99999#
		for(ii in seq(1:dim(row1)[1])){#
			flow.t[i,(ii+1)] <- as.numeric(as.character(row1[ii,1]))#
		}#
	} else {#
		for( ii in seq(1:dim(row1)[1])){#
			flow.t[i,ii] <- as.numeric(as.character(row1[ii,1]))#
		}#
	}#
}
Read in Explicit rounting table created by hand / with GRASS#
rtab <- read.csv(file="roadpnos.csv", header=T)
flow.t <- flow.t3#
y <- dim(flow.t)[1]#
#
nrv <- c(0)#
#
for(i in seq(1:dim(rtab)[1])){#
	for (ii in seq(1:y)){#
		if(flow.t[ii,1]==rtab$PatchNo[i]) {#
			if(rtab$RoadSeg[i]==0) {#
				npats <- flow.t[ii,11]#
				if(npats >= 2) {#
					nrv <- c(nrv,c((ii+2):(ii+npats)))#
				}#
				flow.t[(ii+1),2] <- rtab$PatchRouteTo[i]#
				flow.t[(ii+1),3] <- rtab$ZoneNo[i]#
				flow.t[(ii+1),4] <- rtab$HillNo[i]#
				flow.t[(ii+1),5] <- 1 # gamma of one#
				flow.t[ii,11]    <- 1 # number of patches (just one) #
				flow.t[ii,9]     <- rtab$LandType[i]				#
			} else {#
				npats <- flow.t[ii,11]#
				if(npats >= 2) {#
					nrv <- c(nrv,c((ii+2):(ii+npats+1)))#
				} else {#
					nrv <- c(nrv,(ii+2))#
				}#
				flow.t[(ii+1),2] <- rtab$PatchRouteTo[i]#
				flow.t[(ii+1),3] <- rtab$ZoneNo[i]#
				flow.t[(ii+1),4] <- rtab$HillNo[i]#
				flow.t[(ii+1),5] <- 1 # gamma 	#
				flow.t[ii,11]    <- 1 # number of patches (just one) 	#
				flow.t[ii,9]     <- rtab$LandType[i]		#
			}#
			break	#
		}#
	}#
}#
#
nrv <- nrv[-1]#
#
flow.t <- flow.t[-nrv,]#
#
flow.t[flow.t==-99999] <- NA#
#
flow.t[,9][flow.t[,9]==2]<-0 # LANDTYPE = ROADS SHOULD BE PROPERLY ROUTED IN ABOVE CODE - RHESSYS IS HAVING A PROBLEM READING THE FLOW TABLE SO JUST CHANGE TO 0 #
write.table(flow.t, file="../pondtest_surface_new.flow",sep="  ", row.names=FALSE, col.names=FALSE, na="")
for subsurface flow table:#
# Read in subsurface flow table#
flow <- read.table(file="pondtest_subsurface.flow", header=F, sep=",")#
flow.t <- as.data.frame(matrix(data=-99999,nrow=dim(flow)[1],ncol=11))#
#
# Convert flow table into a usable data frame#
for(i in seq(1:dim(flow)[1])){#
	row1 <- as.data.frame(strsplit(as.character(flow[i,1])," "))#
	row1 <- subset(row1, row1!="")#
	if(dim(row1)[1]<5) {#
		flow.t[i,1] <- -99999#
		for(ii in seq(1:dim(row1)[1])){#
			flow.t[i,(ii+1)] <- as.numeric(as.character(row1[ii,1]))#
		}#
	} else {#
		for( ii in seq(1:dim(row1)[1])){#
			flow.t[i,ii] <- as.numeric(as.character(row1[ii,1]))#
		}#
	}#
}#
#flow.t <- flow.t3#
y <- dim(flow.t)[1]#
#
nrv <- c(0)
head(flow.t)
for subsurface flow table:#
# Read in subsurface flow table#
flow <- read.table(file="pondtest_subsurface.flow", header=F, sep=",")#
flow.t <- as.data.frame(matrix(data=-99999,nrow=dim(flow)[1],ncol=11))#
#
# Convert flow table into a usable data frame#
for(i in seq(1:dim(flow)[1])){#
	row1 <- as.data.frame(strsplit(as.character(flow[i,1])," "))#
	row1 <- subset(row1, row1!="")#
	if(dim(row1)[1]<5) {#
		flow.t[i,1] <- -99999#
		for(ii in seq(1:dim(row1)[1])){#
			flow.t[i,(ii+1)] <- as.numeric(as.character(row1[ii,1]))#
		}#
	} else {#
		for( ii in seq(1:dim(row1)[1])){#
			flow.t[i,ii] <- as.numeric(as.character(row1[ii,1]))#
		}#
	}#
}#
#flow.t <- flow.t3#
y <- dim(flow.t)[1]#
#
nrv <- c(0)
flow.t
for subsurface flow table:#
# Read in subsurface flow table#
flow <- read.table(file="pondtest_subsurface.flow", header=F, sep=",")#
flow.t <- as.data.frame(matrix(data=-99999,nrow=dim(flow)[1],ncol=11))#
#
# Convert flow table into a usable data frame#
for(i in seq(1:dim(flow)[1])){#
	row1 <- as.data.frame(strsplit(as.character(flow[i,1])," "))#
	row1 <- subset(row1, row1!="")#
	if(dim(row1)[1]<5) {#
		flow.t[i,1] <- -99999#
		for(ii in seq(1:dim(row1)[1])){#
			flow.t[i,(ii+1)] <- as.numeric(as.character(row1[ii,1]))#
		}#
	} else {#
		for( ii in seq(1:dim(row1)[1])){#
			flow.t[i,ii] <- as.numeric(as.character(row1[ii,1]))#
		}#
	}#
}#
#flow.t <- flow.t3#
y <- dim(flow.t)[1]#
for(i in seq(1:dim(rtab)[1])){#
	for (ii in seq(1:y)){#
		if(flow.t[ii,1]==rtab$PatchNo[i]) {#
				flow.t[ii,9]     <- rtab$LandType[i]		#
		}#
		break	#
	}#
}#
#
flow.t[flow.t==-99999] <- NA
write.table(flow.t, file="../pondtest_subsurface_new.flow",sep="  ", row.names=FALSE, col.names=FALSE, na="")
head(flow.t)
unique(flow.t$V9)
head(rtab)
tail(rtab)
y
dim(rtab)[1]
rtab$PatchNo
head(flow)
flow.t <- as.data.frame(matrix(data=-99999,nrow=dim(flow)[1],ncol=11))
head(flow.t)
for subsurface flow table:#
# Read in subsurface flow table#
flow <- read.table(file="pondtest_subsurface.flow", header=F, sep=",")#
flow.t <- as.data.frame(matrix(data=-99999,nrow=dim(flow)[1],ncol=11))#
#
# Convert flow table into a usable data frame#
for(i in seq(1:dim(flow)[1])){#
	row1 <- as.data.frame(strsplit(as.character(flow[i,1])," "))#
	row1 <- subset(row1, row1!="")#
	if(dim(row1)[1]<5) {#
		flow.t[i,1] <- -99999#
		for(ii in seq(1:dim(row1)[1])){#
			flow.t[i,(ii+1)] <- as.numeric(as.character(row1[ii,1]))#
		}#
	} else {#
		for( ii in seq(1:dim(row1)[1])){#
			flow.t[i,ii] <- as.numeric(as.character(row1[ii,1]))#
		}#
	}#
}#
#flow.t <- flow.t3#
y <- dim(flow.t)[1]#
#
flow.save <- flow.t
head(flow.t)
unique(flow.t$V9)
flow.t <- flow.t3#
y <- dim(flow.t)[1]#
#
flow.save <- flow.t#
#
for(i in seq(1:dim(rtab)[1])){#
	for (ii in seq(1:y)){#
		if(flow.t[ii,1]==rtab$PatchNo[i]) {#
				flow.t[ii,9]     <- rtab$LandType[i]		#
		}#
		break	#
	}#
}
flow.t <- flow.save
for(i in seq(1:dim(rtab)[1])){#
	for (ii in seq(1:y)){#
		if(flow.t[ii,1]==rtab$PatchNo[i]) {#
				flow.t[ii,9]     <- rtab$LandType[i]		#
				break#
		}#
#
	}#
}
unique(flow.t$V9)
summary(flow.t$V9)
as.factor(flow.t$V9)
flow.t$V9 <- as.factor(flow.t$V9)
summary(flow.t$V9)
summary(flow.save$V9)
flow.save$V9 <- as.factor(flow.save$V9)
summary(flow.save$V9)
flow.t[flow.t==-99999] <- NA#
#
#flow.t[,9][flow.t[,9]==2]<-0 # LANDTYPE = ROADS SHOULD BE PROPERLY ROUTED IN ABOVE CODE - RHESSYS IS HAVING A PROBLEM READING THE FLOW TABLE SO JUST CHANGE TO 0 #
write.table(flow.t, file="../pondtest_subsurface_new.flow",sep="  ", row.names=FALSE, col.names=FALSE, na="")
Read in surface flow table#
flow <- read.table(file="pondtest_surface.flow", header=F, sep=",")#
flow.t <- as.data.frame(matrix(data=-99999,nrow=dim(flow)[1],ncol=11))#
#
# Convert flow table into a usable data frame#
for(i in seq(1:dim(flow)[1])){#
	row1 <- as.data.frame(strsplit(as.character(flow[i,1])," "))#
	row1 <- subset(row1, row1!="")#
	if(dim(row1)[1]<5) {#
		flow.t[i,1] <- -99999#
		for(ii in seq(1:dim(row1)[1])){#
			flow.t[i,(ii+1)] <- as.numeric(as.character(row1[ii,1]))#
		}#
	} else {#
		for( ii in seq(1:dim(row1)[1])){#
			flow.t[i,ii] <- as.numeric(as.character(row1[ii,1]))#
		}#
	}#
}#
#flow.t <- flow.t3#
y <- dim(flow.t)[1]#
#
nrv <- c(0)#
#
for(i in seq(1:dim(rtab)[1])){#
	for (ii in seq(1:y)){#
		if(flow.t[ii,1]==rtab$PatchNo[i]) {#
			if(rtab$RoadSeg[i]==0) {#
				npats <- flow.t[ii,11]#
				if(npats >= 2) {#
					nrv <- c(nrv,c((ii+2):(ii+npats)))#
				}#
				flow.t[(ii+1),2] <- rtab$PatchRouteTo[i]#
				flow.t[(ii+1),3] <- rtab$ZoneNo[i]#
				flow.t[(ii+1),4] <- rtab$HillNo[i]#
				flow.t[(ii+1),5] <- 1 # gamma of one#
				flow.t[ii,11]    <- 1 # number of patches (just one) #
				flow.t[ii,9]     <- rtab$LandType[i]				#
			} else {#
				npats <- flow.t[ii,11]#
				if(npats >= 2) {#
					nrv <- c(nrv,c((ii+2):(ii+npats+1)))#
				} else {#
					nrv <- c(nrv,(ii+2))#
				}#
				flow.t[(ii+1),2] <- rtab$PatchRouteTo[i]#
				flow.t[(ii+1),3] <- rtab$ZoneNo[i]#
				flow.t[(ii+1),4] <- rtab$HillNo[i]#
				flow.t[(ii+1),5] <- 1 # gamma 	#
				flow.t[ii,11]    <- 1 # number of patches (just one) 	#
				flow.t[ii,9]     <- rtab$LandType[i]		#
			}#
			break	#
		}#
	}#
}#
#
nrv <- nrv[-1]#
#
flow.t <- flow.t[-nrv,]#
#
flow.t[flow.t==-99999] <- NA#
#
#flow.t[,9][flow.t[,9]==2]<-0 # LANDTYPE = ROADS SHOULD BE PROPERLY ROUTED IN ABOVE CODE - RHESSYS IS HAVING A PROBLEM READING THE FLOW TABLE SO JUST CHANGE TO 0 #
write.table(flow.t, file="../pondtest_surface_new.flow",sep="  ", row.names=FALSE, col.names=FALSE, na="")
for subsurface flow table:#
# Read in subsurface flow table#
flow <- read.table(file="pondtest_subsurface.flow", header=F, sep=",")#
flow.t <- as.data.frame(matrix(data=-99999,nrow=dim(flow)[1],ncol=11))#
#
# Convert flow table into a usable data frame#
for(i in seq(1:dim(flow)[1])){#
	row1 <- as.data.frame(strsplit(as.character(flow[i,1])," "))#
	row1 <- subset(row1, row1!="")#
	if(dim(row1)[1]<5) {#
		flow.t[i,1] <- -99999#
		for(ii in seq(1:dim(row1)[1])){#
			flow.t[i,(ii+1)] <- as.numeric(as.character(row1[ii,1]))#
		}#
	} else {#
		for( ii in seq(1:dim(row1)[1])){#
			flow.t[i,ii] <- as.numeric(as.character(row1[ii,1]))#
		}#
	}#
}#
#flow.t <- flow.t3#
y <- dim(flow.t)[1]#
#
flow.save <- flow.t#
# NOW, jsut converted the "drainage_type" field based on the previous stuff.#
for(i in seq(1:dim(rtab)[1])){#
	for (ii in seq(1:y)){#
		if(flow.t[ii,1]==rtab$PatchNo[i]) {#
				flow.t[ii,9]     <- rtab$LandType[i]		#
				break#
		}#
#
	}#
}#
flow.t[flow.t==-99999] <- NA#
#
#flow.t[,9][flow.t[,9]==2]<-0 # LANDTYPE = ROADS SHOULD BE PROPERLY ROUTED IN ABOVE CODE - RHESSYS IS HAVING A PROBLEM READING THE FLOW TABLE SO JUST CHANGE TO 0 #
write.table(flow.t, file="../pondtest_subsurface_new.flow",sep="  ", row.names=FALSE, col.names=FALSE, na="")
head(flow.t)
tail(flow.t)
max(flow.t)
max(flow.t, na.rm=T)
min(flow.t, na.rm=T)
q()
setwd("/Users/colinbell/pondtest/programs/rhessys.develop.scm/rhessys/pondtest/flowtables/edited/")
for subsurface flow table:#
# Read in subsurface flow table#
flow <- read.table(file="pondtest_subsurface.flow", header=F, sep=",")#
flow.t <- as.data.frame(matrix(data=-99999,nrow=dim(flow)[1],ncol=11))#
#
# Convert flow table into a usable data frame#
for(i in seq(1:dim(flow)[1])){#
	row1 <- as.data.frame(strsplit(as.character(flow[i,1])," "))#
	row1 <- subset(row1, row1!="")#
	if(dim(row1)[1]<5) {#
		flow.t[i,1] <- -99999#
		for(ii in seq(1:dim(row1)[1])){#
			flow.t[i,(ii+1)] <- as.numeric(as.character(row1[ii,1]))#
		}#
	} else {#
		for( ii in seq(1:dim(row1)[1])){#
			flow.t[i,ii] <- as.numeric(as.character(row1[ii,1]))#
		}#
	}#
}#
#flow.t <- flow.t3#
y <- dim(flow.t)[1]#
#
flow.save <- flow.t
pwd()
getwd()
setwd("../unedited/")
for subsurface flow table:#
# Read in subsurface flow table#
flow <- read.table(file="pondtest_subsurface.flow", header=F, sep=",")#
flow.t <- as.data.frame(matrix(data=-99999,nrow=dim(flow)[1],ncol=11))#
#
# Convert flow table into a usable data frame#
for(i in seq(1:dim(flow)[1])){#
	row1 <- as.data.frame(strsplit(as.character(flow[i,1])," "))#
	row1 <- subset(row1, row1!="")#
	if(dim(row1)[1]<5) {#
		flow.t[i,1] <- -99999#
		for(ii in seq(1:dim(row1)[1])){#
			flow.t[i,(ii+1)] <- as.numeric(as.character(row1[ii,1]))#
		}#
	} else {#
		for( ii in seq(1:dim(row1)[1])){#
			flow.t[i,ii] <- as.numeric(as.character(row1[ii,1]))#
		}#
	}#
}#
#flow.t <- flow.t3#
y <- dim(flow.t)[1]#
#
flow.save <- flow.t
nrv <- c(0)#
# NOW, jsut converted the "drainage_type" field based on the previous stuff.#
# and delete the extra row for road patches#
for(i in seq(1:dim(rtab)[1])){#
	for (ii in seq(1:y)){#
		if(flow.t[ii,1]==rtab$PatchNo[i]) { #
			if(rtab$RoadSeg[i]==0) { # Chnage drainage_type to SCM#
				flow.t[ii,9]     <- rtab$LandType[i]				#
			} else if (rtab$RoadSeg[i]==1) { # These will remain as roads, no edits to flow table#
			} else { # These need their land type changes form "road" to "Land" and the extra row removed #
				npats <- flow.t[ii,11]#
				nrv <- c(nrv,(ii+npats+1)) # remove the road routing row in the flowtable#
				flow.t[ii,9]     <- rtab$LandType[i]		#
			}#
			break	#
#
		}#
#
	}#
}#
nrv <- nrv[-1]#
#
flow.t <- flow.t[-nrv,]
rtab <- read.csv(file="roadpnos.csv", header=T)
nrv <- c(0)#
# NOW, jsut converted the "drainage_type" field based on the previous stuff.#
# and delete the extra row for road patches#
for(i in seq(1:dim(rtab)[1])){#
	for (ii in seq(1:y)){#
		if(flow.t[ii,1]==rtab$PatchNo[i]) { #
			if(rtab$RoadSeg[i]==0) { # Chnage drainage_type to SCM#
				flow.t[ii,9]     <- rtab$LandType[i]				#
			} else if (rtab$RoadSeg[i]==1) { # These will remain as roads, no edits to flow table#
			} else { # These need their land type changes form "road" to "Land" and the extra row removed #
				npats <- flow.t[ii,11]#
				nrv <- c(nrv,(ii+npats+1)) # remove the road routing row in the flowtable#
				flow.t[ii,9]     <- rtab$LandType[i]		#
			}#
			break	#
#
		}#
#
	}#
}#
nrv <- nrv[-1]#
#
flow.t <- flow.t[-nrv,]
head)flow.t
head(flow.t)
flow <- read.table(file="pondtest_subsurface.flow", header=F, sep=",")#
flow.t <- as.data.frame(matrix(data=-99999,nrow=dim(flow)[1],ncol=11))#
#
# Convert flow table into a usable data frame#
for(i in seq(1:dim(flow)[1])){#
	row1 <- as.data.frame(strsplit(as.character(flow[i,1])," "))#
	row1 <- subset(row1, row1!="")#
	if(dim(row1)[1]<5) {#
		flow.t[i,1] <- -99999#
		for(ii in seq(1:dim(row1)[1])){#
			flow.t[i,(ii+1)] <- as.numeric(as.character(row1[ii,1]))#
		}#
	} else {#
		for( ii in seq(1:dim(row1)[1])){#
			flow.t[i,ii] <- as.numeric(as.character(row1[ii,1]))#
		}#
	}#
}#
#flow.t <- flow.t3#
y <- dim(flow.t)[1]#
#
flow.save <- flow.t
nrv <- c(0)#
# NOW, jsut converted the "drainage_type" field based on the previous stuff.#
# and delete the extra row for road patches#
for(i in seq(1:dim(rtab)[1])){#
	for (ii in seq(1:y)){#
		if(flow.t[ii,1]==rtab$PatchNo[i]) { #
			if(rtab$RoadSeg[i]==0) { # Chnage drainage_type to SCM#
				flow.t[ii,9]     <- rtab$LandType[i]				#
			} else if (rtab$RoadSeg[i]==1) { # These will remain as roads, no edits to flow table#
			} else { # These need their land type changes form "road" to "Land" and the extra row removed #
				npats <- flow.t[ii,11]#
				nrv <- c(nrv,(ii+npats+1)) # remove the road routing row in the flowtable#
				flow.t[ii,9]     <- rtab$LandType[i]		#
			}#
			break	#
#
		}#
#
	}#
}#
nrv <- nrv[-1]#
#
flow.t <- flow.t[-nrv,]#
#
flow.t[flow.t==-99999] <- NA#
#
#flow.t[,9][flow.t[,9]==2]<-0 # LANDTYPE = ROADS SHOULD BE PROPERLY ROUTED IN ABOVE CODE - RHESSYS IS HAVING A PROBLEM READING THE FLOW TABLE SO JUST CHANGE TO 0 #
write.table(flow.t, file="../pondtest_subsurface_new.flow",sep="  ", row.names=FALSE, col.names=FALSE, na="")
flow.t <- flow.save#
nrv <- c(0)#
# NOW, jsut converted the "drainage_type" field based on the previous stuff.#
# and delete the extra row for road patches#
for(i in seq(1:dim(rtab)[1])){#
	for (ii in seq(1:y)){#
		if(flow.t[ii,1]==rtab$PatchNo[i]) { #
			if(rtab$RoadSeg[i]==0) { # Chnage drainage_type to SCM#
				flow.t[ii,9]     <- rtab$LandType[i]				#
			} else {#
				npats <- flow.t[ii,11]#
				nrv <- c(nrv,(ii+npats+1)) # remove the road routing row in the flowtable#
				flow.t[ii,9]     <- rtab$LandType[i]		#
			}#
			break	#
#
		}#
#
	}#
}#
nrv <- nrv[-1]#
#
flow.t <- flow.t[-nrv,]#
#
flow.t[flow.t==-99999] <- NA#
#
#flow.t[,9][flow.t[,9]==2]<-0 # LANDTYPE = ROADS SHOULD BE PROPERLY ROUTED IN ABOVE CODE - RHESSYS IS HAVING A PROBLEM READING THE FLOW TABLE SO JUST CHANGE TO 0 #
write.table(flow.t, file="../pondtest_subsurface_new.flow",sep="  ", row.names=FALSE, col.names=FALSE, na="")
flow.t <- flow.save#
nrv <- c(0)#
# NOW, jsut converted the "drainage_type" field based on the previous stuff.#
# and delete the extra row for road patches#
for(i in seq(1:dim(rtab)[1])){#
	for (ii in seq(1:y)){#
		if(flow.t[ii,1]==rtab$PatchNo[i]) { #
			if(rtab$RoadSeg[i]==0) { # Chnage drainage_type to SCM#
				flow.t[ii,9]     <- rtab$LandType[i]				#
			} else {#
				npats <- flow.t[ii,11]#
				nrv <- c(nrv,(ii+npats+1)) # remove the road routing row in the flowtable#
				flow.t[ii,9]     <- rtab$LandType[i]		#
			}#
			break	#
#
		}#
#
	}#
}#
nrv <- nrv[-1]#
#
flow.t <- flow.t[-nrv,]#
#
flow.t[flow.t==-99999] <- NA#
#
#flow.t[,9][flow.t[,9]==2]<-0 # LANDTYPE = ROADS SHOULD BE PROPERLY ROUTED IN ABOVE CODE - RHESSYS IS HAVING A PROBLEM READING THE FLOW TABLE SO JUST CHANGE TO 0 #
write.table(flow.t, file="../pondtest_subsurface_new.flow",sep="  ", row.names=FALSE, col.names=FALSE, na="")
rtab <- read.csv(file="roadpnos.csv", header=T)
flow.t <- flow.save#
nrv <- c(0)#
# NOW, jsut converted the "drainage_type" field based on the previous stuff.#
# and delete the extra row for road patches#
for(i in seq(1:dim(rtab)[1])){#
	for (ii in seq(1:y)){#
		if(flow.t[ii,1]==rtab$PatchNo[i]) { #
			if(rtab$RoadSeg[i]==0) { # Chnage drainage_type to SCM#
				flow.t[ii,9]     <- rtab$LandType[i]				#
			} else {#
				npats <- flow.t[ii,11]#
				nrv <- c(nrv,(ii+npats+1)) # remove the road routing row in the flowtable#
				flow.t[ii,9]     <- rtab$LandType[i]		#
			}#
			break	#
#
		}#
#
	}#
}#
nrv <- nrv[-1]#
#
flow.t <- flow.t[-nrv,]#
#
flow.t[flow.t==-99999] <- NA#
#
#flow.t[,9][flow.t[,9]==2]<-0 # LANDTYPE = ROADS SHOULD BE PROPERLY ROUTED IN ABOVE CODE - RHESSYS IS HAVING A PROBLEM READING THE FLOW TABLE SO JUST CHANGE TO 0 #
write.table(flow.t, file="../pondtest_subsurface_new.flow",sep="  ", row.names=FALSE, col.names=FALSE, na="")
q()
